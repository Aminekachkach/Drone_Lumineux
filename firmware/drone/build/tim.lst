ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/tim.c"
  20              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_TIM_Base_MspInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_TIM_Base_MspInit:
  28              	.LVL0:
  29              	.LFB321:
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** TIM_HandleTypeDef htim2;
  29:Core/Src/tim.c **** DMA_HandleTypeDef hdma_tim2_ch1;
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 2


  30:Core/Src/tim.c **** 
  31:Core/Src/tim.c **** /* TIM1 init function */
  32:Core/Src/tim.c **** void MX_TIM1_Init(void)
  33:Core/Src/tim.c **** {
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  38:Core/Src/tim.c **** 
  39:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  40:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  41:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  42:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  43:Core/Src/tim.c **** 
  44:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  45:Core/Src/tim.c **** 
  46:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  47:Core/Src/tim.c ****   htim1.Instance = TIM1;
  48:Core/Src/tim.c ****   htim1.Init.Prescaler = 80-1;
  49:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  50:Core/Src/tim.c ****   htim1.Init.Period = 20000-1;
  51:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  52:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  53:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  54:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  55:Core/Src/tim.c ****   {
  56:Core/Src/tim.c ****     Error_Handler();
  57:Core/Src/tim.c ****   }
  58:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  59:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  60:Core/Src/tim.c ****   {
  61:Core/Src/tim.c ****     Error_Handler();
  62:Core/Src/tim.c ****   }
  63:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  64:Core/Src/tim.c ****   {
  65:Core/Src/tim.c ****     Error_Handler();
  66:Core/Src/tim.c ****   }
  67:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  68:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
  69:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  70:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  71:Core/Src/tim.c ****   {
  72:Core/Src/tim.c ****     Error_Handler();
  73:Core/Src/tim.c ****   }
  74:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  75:Core/Src/tim.c ****   sConfigOC.Pulse = 1000;
  76:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  77:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  78:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  79:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  80:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  81:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  82:Core/Src/tim.c ****   {
  83:Core/Src/tim.c ****     Error_Handler();
  84:Core/Src/tim.c ****   }
  85:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
  86:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 3


  87:Core/Src/tim.c ****   {
  88:Core/Src/tim.c ****     Error_Handler();
  89:Core/Src/tim.c ****   }
  90:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
  91:Core/Src/tim.c ****   {
  92:Core/Src/tim.c ****     Error_Handler();
  93:Core/Src/tim.c ****   }
  94:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
  95:Core/Src/tim.c ****   {
  96:Core/Src/tim.c ****     Error_Handler();
  97:Core/Src/tim.c ****   }
  98:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  99:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 100:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 101:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 102:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 103:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 104:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 105:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 106:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 107:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 108:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 109:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 110:Core/Src/tim.c ****   {
 111:Core/Src/tim.c ****     Error_Handler();
 112:Core/Src/tim.c ****   }
 113:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 114:Core/Src/tim.c **** 
 115:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
 116:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim1);
 117:Core/Src/tim.c **** 
 118:Core/Src/tim.c **** }
 119:Core/Src/tim.c **** /* TIM2 init function */
 120:Core/Src/tim.c **** void MX_TIM2_Init(void)
 121:Core/Src/tim.c **** {
 122:Core/Src/tim.c **** 
 123:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 124:Core/Src/tim.c **** 
 125:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 0 */
 126:Core/Src/tim.c **** 
 127:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 128:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 129:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 130:Core/Src/tim.c **** 
 131:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 132:Core/Src/tim.c **** 
 133:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 1 */
 134:Core/Src/tim.c ****   htim2.Instance = TIM2;
 135:Core/Src/tim.c ****   htim2.Init.Prescaler = 0;
 136:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 137:Core/Src/tim.c ****   htim2.Init.Period = 4294967295;
 138:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 139:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 140:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 141:Core/Src/tim.c ****   {
 142:Core/Src/tim.c ****     Error_Handler();
 143:Core/Src/tim.c ****   }
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 4


 144:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 145:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 146:Core/Src/tim.c ****   {
 147:Core/Src/tim.c ****     Error_Handler();
 148:Core/Src/tim.c ****   }
 149:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 150:Core/Src/tim.c ****   {
 151:Core/Src/tim.c ****     Error_Handler();
 152:Core/Src/tim.c ****   }
 153:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 154:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 155:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 156:Core/Src/tim.c ****   {
 157:Core/Src/tim.c ****     Error_Handler();
 158:Core/Src/tim.c ****   }
 159:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 160:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 161:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 162:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 163:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 164:Core/Src/tim.c ****   {
 165:Core/Src/tim.c ****     Error_Handler();
 166:Core/Src/tim.c ****   }
 167:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 168:Core/Src/tim.c **** 
 169:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 2 */
 170:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim2);
 171:Core/Src/tim.c **** 
 172:Core/Src/tim.c **** }
 173:Core/Src/tim.c **** 
 174:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 175:Core/Src/tim.c **** {
  30              		.loc 1 175 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 175 1 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  39 0002 82B0     		sub	sp, sp, #8
  40              		.cfi_def_cfa_offset 16
 176:Core/Src/tim.c **** 
 177:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
  41              		.loc 1 177 3 is_stmt 1 view .LVU2
  42              		.loc 1 177 20 is_stmt 0 view .LVU3
  43 0004 0368     		ldr	r3, [r0]
  44              		.loc 1 177 5 view .LVU4
  45 0006 1E4A     		ldr	r2, .L9
  46 0008 9342     		cmp	r3, r2
  47 000a 05D0     		beq	.L6
  48 000c 0446     		mov	r4, r0
 178:Core/Src/tim.c ****   {
 179:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 180:Core/Src/tim.c **** 
 181:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 5


 182:Core/Src/tim.c ****     /* TIM1 clock enable */
 183:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 184:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 185:Core/Src/tim.c **** 
 186:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 187:Core/Src/tim.c ****   }
 188:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM2)
  49              		.loc 1 188 8 is_stmt 1 view .LVU5
  50              		.loc 1 188 10 is_stmt 0 view .LVU6
  51 000e B3F1804F 		cmp	r3, #1073741824
  52 0012 0CD0     		beq	.L7
  53              	.LVL1:
  54              	.L1:
 189:Core/Src/tim.c ****   {
 190:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 191:Core/Src/tim.c **** 
 192:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 0 */
 193:Core/Src/tim.c ****     /* TIM2 clock enable */
 194:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_ENABLE();
 195:Core/Src/tim.c **** 
 196:Core/Src/tim.c ****     /* TIM2 DMA Init */
 197:Core/Src/tim.c ****     /* TIM2_CH1 Init */
 198:Core/Src/tim.c ****     hdma_tim2_ch1.Instance = DMA1_Channel5;
 199:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Request = DMA_REQUEST_4;
 200:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 201:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 202:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;
 203:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 204:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 205:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Mode = DMA_NORMAL;
 206:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 207:Core/Src/tim.c ****     if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 208:Core/Src/tim.c ****     {
 209:Core/Src/tim.c ****       Error_Handler();
 210:Core/Src/tim.c ****     }
 211:Core/Src/tim.c **** 
 212:Core/Src/tim.c ****     __HAL_LINKDMA(tim_baseHandle,hdma[TIM_DMA_ID_CC1],hdma_tim2_ch1);
 213:Core/Src/tim.c **** 
 214:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 215:Core/Src/tim.c **** 
 216:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 1 */
 217:Core/Src/tim.c ****   }
 218:Core/Src/tim.c **** }
  55              		.loc 1 218 1 view .LVU7
  56 0014 02B0     		add	sp, sp, #8
  57              		.cfi_remember_state
  58              		.cfi_def_cfa_offset 8
  59              		@ sp needed
  60 0016 10BD     		pop	{r4, pc}
  61              	.LVL2:
  62              	.L6:
  63              		.cfi_restore_state
 183:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  64              		.loc 1 183 5 is_stmt 1 view .LVU8
  65              	.LBB2:
 183:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  66              		.loc 1 183 5 view .LVU9
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 6


 183:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  67              		.loc 1 183 5 view .LVU10
  68 0018 1A4B     		ldr	r3, .L9+4
  69 001a 1A6E     		ldr	r2, [r3, #96]
  70 001c 42F40062 		orr	r2, r2, #2048
  71 0020 1A66     		str	r2, [r3, #96]
 183:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  72              		.loc 1 183 5 view .LVU11
  73 0022 1B6E     		ldr	r3, [r3, #96]
  74 0024 03F40063 		and	r3, r3, #2048
  75 0028 0093     		str	r3, [sp]
 183:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  76              		.loc 1 183 5 view .LVU12
  77 002a 009B     		ldr	r3, [sp]
  78              	.LBE2:
 183:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  79              		.loc 1 183 5 view .LVU13
  80 002c F2E7     		b	.L1
  81              	.L7:
 194:Core/Src/tim.c **** 
  82              		.loc 1 194 5 view .LVU14
  83              	.LBB3:
 194:Core/Src/tim.c **** 
  84              		.loc 1 194 5 view .LVU15
 194:Core/Src/tim.c **** 
  85              		.loc 1 194 5 view .LVU16
  86 002e 03F50433 		add	r3, r3, #135168
  87 0032 9A6D     		ldr	r2, [r3, #88]
  88 0034 42F00102 		orr	r2, r2, #1
  89 0038 9A65     		str	r2, [r3, #88]
 194:Core/Src/tim.c **** 
  90              		.loc 1 194 5 view .LVU17
  91 003a 9B6D     		ldr	r3, [r3, #88]
  92 003c 03F00103 		and	r3, r3, #1
  93 0040 0193     		str	r3, [sp, #4]
 194:Core/Src/tim.c **** 
  94              		.loc 1 194 5 view .LVU18
  95 0042 019B     		ldr	r3, [sp, #4]
  96              	.LBE3:
 194:Core/Src/tim.c **** 
  97              		.loc 1 194 5 view .LVU19
 198:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Request = DMA_REQUEST_4;
  98              		.loc 1 198 5 view .LVU20
 198:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Request = DMA_REQUEST_4;
  99              		.loc 1 198 28 is_stmt 0 view .LVU21
 100 0044 1048     		ldr	r0, .L9+8
 101              	.LVL3:
 198:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Request = DMA_REQUEST_4;
 102              		.loc 1 198 28 view .LVU22
 103 0046 114B     		ldr	r3, .L9+12
 104 0048 0360     		str	r3, [r0]
 199:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 105              		.loc 1 199 5 is_stmt 1 view .LVU23
 199:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 106              		.loc 1 199 32 is_stmt 0 view .LVU24
 107 004a 0423     		movs	r3, #4
 108 004c 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 7


 200:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 109              		.loc 1 200 5 is_stmt 1 view .LVU25
 200:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 110              		.loc 1 200 34 is_stmt 0 view .LVU26
 111 004e 0023     		movs	r3, #0
 112 0050 8360     		str	r3, [r0, #8]
 201:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;
 113              		.loc 1 201 5 is_stmt 1 view .LVU27
 201:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;
 114              		.loc 1 201 34 is_stmt 0 view .LVU28
 115 0052 C360     		str	r3, [r0, #12]
 202:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 116              		.loc 1 202 5 is_stmt 1 view .LVU29
 202:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 117              		.loc 1 202 31 is_stmt 0 view .LVU30
 118 0054 8022     		movs	r2, #128
 119 0056 0261     		str	r2, [r0, #16]
 203:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 120              		.loc 1 203 5 is_stmt 1 view .LVU31
 203:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 121              		.loc 1 203 44 is_stmt 0 view .LVU32
 122 0058 4FF40072 		mov	r2, #512
 123 005c 4261     		str	r2, [r0, #20]
 204:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Mode = DMA_NORMAL;
 124              		.loc 1 204 5 is_stmt 1 view .LVU33
 204:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Mode = DMA_NORMAL;
 125              		.loc 1 204 41 is_stmt 0 view .LVU34
 126 005e 4FF40062 		mov	r2, #2048
 127 0062 8261     		str	r2, [r0, #24]
 205:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 128              		.loc 1 205 5 is_stmt 1 view .LVU35
 205:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 129              		.loc 1 205 29 is_stmt 0 view .LVU36
 130 0064 C361     		str	r3, [r0, #28]
 206:Core/Src/tim.c ****     if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 131              		.loc 1 206 5 is_stmt 1 view .LVU37
 206:Core/Src/tim.c ****     if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 132              		.loc 1 206 33 is_stmt 0 view .LVU38
 133 0066 4FF44053 		mov	r3, #12288
 134 006a 0362     		str	r3, [r0, #32]
 207:Core/Src/tim.c ****     {
 135              		.loc 1 207 5 is_stmt 1 view .LVU39
 207:Core/Src/tim.c ****     {
 136              		.loc 1 207 9 is_stmt 0 view .LVU40
 137 006c FFF7FEFF 		bl	HAL_DMA_Init
 138              	.LVL4:
 207:Core/Src/tim.c ****     {
 139              		.loc 1 207 8 view .LVU41
 140 0070 18B9     		cbnz	r0, .L8
 141              	.L4:
 212:Core/Src/tim.c **** 
 142              		.loc 1 212 5 is_stmt 1 view .LVU42
 212:Core/Src/tim.c **** 
 143              		.loc 1 212 5 view .LVU43
 144 0072 054B     		ldr	r3, .L9+8
 145 0074 6362     		str	r3, [r4, #36]
 212:Core/Src/tim.c **** 
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 8


 146              		.loc 1 212 5 view .LVU44
 147 0076 9C62     		str	r4, [r3, #40]
 212:Core/Src/tim.c **** 
 148              		.loc 1 212 5 view .LVU45
 149              		.loc 1 218 1 is_stmt 0 view .LVU46
 150 0078 CCE7     		b	.L1
 151              	.L8:
 209:Core/Src/tim.c ****     }
 152              		.loc 1 209 7 is_stmt 1 view .LVU47
 153 007a FFF7FEFF 		bl	Error_Handler
 154              	.LVL5:
 155 007e F8E7     		b	.L4
 156              	.L10:
 157              		.align	2
 158              	.L9:
 159 0080 002C0140 		.word	1073818624
 160 0084 00100240 		.word	1073876992
 161 0088 00000000 		.word	hdma_tim2_ch1
 162 008c 58000240 		.word	1073872984
 163              		.cfi_endproc
 164              	.LFE321:
 166              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 167              		.align	1
 168              		.global	HAL_TIM_MspPostInit
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 173              	HAL_TIM_MspPostInit:
 174              	.LVL6:
 175              	.LFB322:
 219:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 220:Core/Src/tim.c **** {
 176              		.loc 1 220 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 32
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		.loc 1 220 1 is_stmt 0 view .LVU49
 181 0000 00B5     		push	{lr}
 182              		.cfi_def_cfa_offset 4
 183              		.cfi_offset 14, -4
 184 0002 89B0     		sub	sp, sp, #36
 185              		.cfi_def_cfa_offset 40
 221:Core/Src/tim.c **** 
 222:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 186              		.loc 1 222 3 is_stmt 1 view .LVU50
 187              		.loc 1 222 20 is_stmt 0 view .LVU51
 188 0004 0023     		movs	r3, #0
 189 0006 0393     		str	r3, [sp, #12]
 190 0008 0493     		str	r3, [sp, #16]
 191 000a 0593     		str	r3, [sp, #20]
 192 000c 0693     		str	r3, [sp, #24]
 193 000e 0793     		str	r3, [sp, #28]
 223:Core/Src/tim.c ****   if(timHandle->Instance==TIM1)
 194              		.loc 1 223 3 is_stmt 1 view .LVU52
 195              		.loc 1 223 15 is_stmt 0 view .LVU53
 196 0010 0368     		ldr	r3, [r0]
 197              		.loc 1 223 5 view .LVU54
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 9


 198 0012 1B4A     		ldr	r2, .L17
 199 0014 9342     		cmp	r3, r2
 200 0016 05D0     		beq	.L15
 224:Core/Src/tim.c ****   {
 225:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 226:Core/Src/tim.c **** 
 227:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 228:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 229:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 230:Core/Src/tim.c ****     PA8     ------> TIM1_CH1
 231:Core/Src/tim.c ****     PA9     ------> TIM1_CH2
 232:Core/Src/tim.c ****     PA10     ------> TIM1_CH3
 233:Core/Src/tim.c ****     PA11     ------> TIM1_CH4
 234:Core/Src/tim.c ****     */
 235:Core/Src/tim.c ****     GPIO_InitStruct.Pin = TIM_PWM1_Pin|TIM_PWM2_Pin|TIM_PWM3_Pin|TIM_PWM4_Pin;
 236:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 237:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 238:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 239:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 240:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 241:Core/Src/tim.c **** 
 242:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 243:Core/Src/tim.c **** 
 244:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 245:Core/Src/tim.c ****   }
 246:Core/Src/tim.c ****   else if(timHandle->Instance==TIM2)
 201              		.loc 1 246 8 is_stmt 1 view .LVU55
 202              		.loc 1 246 10 is_stmt 0 view .LVU56
 203 0018 B3F1804F 		cmp	r3, #1073741824
 204 001c 19D0     		beq	.L16
 205              	.LVL7:
 206              	.L11:
 247:Core/Src/tim.c ****   {
 248:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
 249:Core/Src/tim.c **** 
 250:Core/Src/tim.c ****   /* USER CODE END TIM2_MspPostInit 0 */
 251:Core/Src/tim.c **** 
 252:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 253:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 254:Core/Src/tim.c ****     PA0-CK_IN     ------> TIM2_CH1
 255:Core/Src/tim.c ****     */
 256:Core/Src/tim.c ****     GPIO_InitStruct.Pin = PWM_Neopixel_Pin;
 257:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 258:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 259:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 260:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 261:Core/Src/tim.c ****     HAL_GPIO_Init(PWM_Neopixel_GPIO_Port, &GPIO_InitStruct);
 262:Core/Src/tim.c **** 
 263:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
 264:Core/Src/tim.c **** 
 265:Core/Src/tim.c ****   /* USER CODE END TIM2_MspPostInit 1 */
 266:Core/Src/tim.c ****   }
 267:Core/Src/tim.c **** 
 268:Core/Src/tim.c **** }
 207              		.loc 1 268 1 view .LVU57
 208 001e 09B0     		add	sp, sp, #36
 209              		.cfi_remember_state
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 10


 210              		.cfi_def_cfa_offset 4
 211              		@ sp needed
 212 0020 5DF804FB 		ldr	pc, [sp], #4
 213              	.LVL8:
 214              	.L15:
 215              		.cfi_restore_state
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 216              		.loc 1 228 5 is_stmt 1 view .LVU58
 217              	.LBB4:
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 218              		.loc 1 228 5 view .LVU59
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 219              		.loc 1 228 5 view .LVU60
 220 0024 174B     		ldr	r3, .L17+4
 221 0026 DA6C     		ldr	r2, [r3, #76]
 222 0028 42F00102 		orr	r2, r2, #1
 223 002c DA64     		str	r2, [r3, #76]
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 224              		.loc 1 228 5 view .LVU61
 225 002e DB6C     		ldr	r3, [r3, #76]
 226 0030 03F00103 		and	r3, r3, #1
 227 0034 0193     		str	r3, [sp, #4]
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 228              		.loc 1 228 5 view .LVU62
 229 0036 019B     		ldr	r3, [sp, #4]
 230              	.LBE4:
 228:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 231              		.loc 1 228 5 view .LVU63
 235:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 232              		.loc 1 235 5 view .LVU64
 235:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 233              		.loc 1 235 25 is_stmt 0 view .LVU65
 234 0038 4FF47063 		mov	r3, #3840
 235 003c 0393     		str	r3, [sp, #12]
 236:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 236              		.loc 1 236 5 is_stmt 1 view .LVU66
 236:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 237              		.loc 1 236 26 is_stmt 0 view .LVU67
 238 003e 0223     		movs	r3, #2
 239 0040 0493     		str	r3, [sp, #16]
 237:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 240              		.loc 1 237 5 is_stmt 1 view .LVU68
 238:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 241              		.loc 1 238 5 view .LVU69
 239:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 242              		.loc 1 239 5 view .LVU70
 239:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 243              		.loc 1 239 31 is_stmt 0 view .LVU71
 244 0042 0123     		movs	r3, #1
 245 0044 0793     		str	r3, [sp, #28]
 240:Core/Src/tim.c **** 
 246              		.loc 1 240 5 is_stmt 1 view .LVU72
 247 0046 03A9     		add	r1, sp, #12
 248 0048 4FF09040 		mov	r0, #1207959552
 249              	.LVL9:
 240:Core/Src/tim.c **** 
 250              		.loc 1 240 5 is_stmt 0 view .LVU73
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 11


 251 004c FFF7FEFF 		bl	HAL_GPIO_Init
 252              	.LVL10:
 253 0050 E5E7     		b	.L11
 254              	.LVL11:
 255              	.L16:
 252:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 256              		.loc 1 252 5 is_stmt 1 view .LVU74
 257              	.LBB5:
 252:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 258              		.loc 1 252 5 view .LVU75
 252:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 259              		.loc 1 252 5 view .LVU76
 260 0052 03F50433 		add	r3, r3, #135168
 261 0056 DA6C     		ldr	r2, [r3, #76]
 262 0058 42F00102 		orr	r2, r2, #1
 263 005c DA64     		str	r2, [r3, #76]
 252:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 264              		.loc 1 252 5 view .LVU77
 265 005e DB6C     		ldr	r3, [r3, #76]
 266 0060 03F00103 		and	r3, r3, #1
 267 0064 0293     		str	r3, [sp, #8]
 252:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 268              		.loc 1 252 5 view .LVU78
 269 0066 029B     		ldr	r3, [sp, #8]
 270              	.LBE5:
 252:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 271              		.loc 1 252 5 view .LVU79
 256:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 272              		.loc 1 256 5 view .LVU80
 256:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 273              		.loc 1 256 25 is_stmt 0 view .LVU81
 274 0068 0123     		movs	r3, #1
 275 006a 0393     		str	r3, [sp, #12]
 257:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 276              		.loc 1 257 5 is_stmt 1 view .LVU82
 257:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 277              		.loc 1 257 26 is_stmt 0 view .LVU83
 278 006c 0222     		movs	r2, #2
 279 006e 0492     		str	r2, [sp, #16]
 258:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 280              		.loc 1 258 5 is_stmt 1 view .LVU84
 259:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 281              		.loc 1 259 5 view .LVU85
 260:Core/Src/tim.c ****     HAL_GPIO_Init(PWM_Neopixel_GPIO_Port, &GPIO_InitStruct);
 282              		.loc 1 260 5 view .LVU86
 260:Core/Src/tim.c ****     HAL_GPIO_Init(PWM_Neopixel_GPIO_Port, &GPIO_InitStruct);
 283              		.loc 1 260 31 is_stmt 0 view .LVU87
 284 0070 0793     		str	r3, [sp, #28]
 261:Core/Src/tim.c **** 
 285              		.loc 1 261 5 is_stmt 1 view .LVU88
 286 0072 03A9     		add	r1, sp, #12
 287 0074 4FF09040 		mov	r0, #1207959552
 288              	.LVL12:
 261:Core/Src/tim.c **** 
 289              		.loc 1 261 5 is_stmt 0 view .LVU89
 290 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 291              	.LVL13:
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 12


 292              		.loc 1 268 1 view .LVU90
 293 007c CFE7     		b	.L11
 294              	.L18:
 295 007e 00BF     		.align	2
 296              	.L17:
 297 0080 002C0140 		.word	1073818624
 298 0084 00100240 		.word	1073876992
 299              		.cfi_endproc
 300              	.LFE322:
 302              		.section	.text.MX_TIM1_Init,"ax",%progbits
 303              		.align	1
 304              		.global	MX_TIM1_Init
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	MX_TIM1_Init:
 310              	.LFB319:
  33:Core/Src/tim.c **** 
 311              		.loc 1 33 1 is_stmt 1 view -0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 104
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315 0000 10B5     		push	{r4, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 4, -8
 318              		.cfi_offset 14, -4
 319 0002 9AB0     		sub	sp, sp, #104
 320              		.cfi_def_cfa_offset 112
  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 321              		.loc 1 39 3 view .LVU92
  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 322              		.loc 1 39 26 is_stmt 0 view .LVU93
 323 0004 0024     		movs	r4, #0
 324 0006 1694     		str	r4, [sp, #88]
 325 0008 1794     		str	r4, [sp, #92]
 326 000a 1894     		str	r4, [sp, #96]
 327 000c 1994     		str	r4, [sp, #100]
  40:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 328              		.loc 1 40 3 is_stmt 1 view .LVU94
  40:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 329              		.loc 1 40 27 is_stmt 0 view .LVU95
 330 000e 1394     		str	r4, [sp, #76]
 331 0010 1494     		str	r4, [sp, #80]
 332 0012 1594     		str	r4, [sp, #84]
  41:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 333              		.loc 1 41 3 is_stmt 1 view .LVU96
  41:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 334              		.loc 1 41 22 is_stmt 0 view .LVU97
 335 0014 0C94     		str	r4, [sp, #48]
 336 0016 0D94     		str	r4, [sp, #52]
 337 0018 0E94     		str	r4, [sp, #56]
 338 001a 0F94     		str	r4, [sp, #60]
 339 001c 1094     		str	r4, [sp, #64]
 340 001e 1194     		str	r4, [sp, #68]
 341 0020 1294     		str	r4, [sp, #72]
  42:Core/Src/tim.c **** 
 342              		.loc 1 42 3 is_stmt 1 view .LVU98
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 13


  42:Core/Src/tim.c **** 
 343              		.loc 1 42 34 is_stmt 0 view .LVU99
 344 0022 2C22     		movs	r2, #44
 345 0024 2146     		mov	r1, r4
 346 0026 01A8     		add	r0, sp, #4
 347 0028 FFF7FEFF 		bl	memset
 348              	.LVL14:
  47:Core/Src/tim.c ****   htim1.Init.Prescaler = 80-1;
 349              		.loc 1 47 3 is_stmt 1 view .LVU100
  47:Core/Src/tim.c ****   htim1.Init.Prescaler = 80-1;
 350              		.loc 1 47 18 is_stmt 0 view .LVU101
 351 002c 4148     		ldr	r0, .L39
 352 002e 424B     		ldr	r3, .L39+4
 353 0030 0360     		str	r3, [r0]
  48:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 354              		.loc 1 48 3 is_stmt 1 view .LVU102
  48:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 355              		.loc 1 48 24 is_stmt 0 view .LVU103
 356 0032 4F23     		movs	r3, #79
 357 0034 4360     		str	r3, [r0, #4]
  49:Core/Src/tim.c ****   htim1.Init.Period = 20000-1;
 358              		.loc 1 49 3 is_stmt 1 view .LVU104
  49:Core/Src/tim.c ****   htim1.Init.Period = 20000-1;
 359              		.loc 1 49 26 is_stmt 0 view .LVU105
 360 0036 8460     		str	r4, [r0, #8]
  50:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 361              		.loc 1 50 3 is_stmt 1 view .LVU106
  50:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 362              		.loc 1 50 21 is_stmt 0 view .LVU107
 363 0038 44F61F63 		movw	r3, #19999
 364 003c C360     		str	r3, [r0, #12]
  51:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 365              		.loc 1 51 3 is_stmt 1 view .LVU108
  51:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 366              		.loc 1 51 28 is_stmt 0 view .LVU109
 367 003e 0461     		str	r4, [r0, #16]
  52:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 368              		.loc 1 52 3 is_stmt 1 view .LVU110
  52:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 369              		.loc 1 52 32 is_stmt 0 view .LVU111
 370 0040 4461     		str	r4, [r0, #20]
  53:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 371              		.loc 1 53 3 is_stmt 1 view .LVU112
  53:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 372              		.loc 1 53 32 is_stmt 0 view .LVU113
 373 0042 8461     		str	r4, [r0, #24]
  54:Core/Src/tim.c ****   {
 374              		.loc 1 54 3 is_stmt 1 view .LVU114
  54:Core/Src/tim.c ****   {
 375              		.loc 1 54 7 is_stmt 0 view .LVU115
 376 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
 377              	.LVL15:
  54:Core/Src/tim.c ****   {
 378              		.loc 1 54 6 view .LVU116
 379 0048 0028     		cmp	r0, #0
 380 004a 58D1     		bne	.L30
 381              	.L20:
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 14


  58:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 382              		.loc 1 58 3 is_stmt 1 view .LVU117
  58:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 383              		.loc 1 58 34 is_stmt 0 view .LVU118
 384 004c 4FF48053 		mov	r3, #4096
 385 0050 1693     		str	r3, [sp, #88]
  59:Core/Src/tim.c ****   {
 386              		.loc 1 59 3 is_stmt 1 view .LVU119
  59:Core/Src/tim.c ****   {
 387              		.loc 1 59 7 is_stmt 0 view .LVU120
 388 0052 16A9     		add	r1, sp, #88
 389 0054 3748     		ldr	r0, .L39
 390 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 391              	.LVL16:
  59:Core/Src/tim.c ****   {
 392              		.loc 1 59 6 view .LVU121
 393 005a 0028     		cmp	r0, #0
 394 005c 52D1     		bne	.L31
 395              	.L21:
  63:Core/Src/tim.c ****   {
 396              		.loc 1 63 3 is_stmt 1 view .LVU122
  63:Core/Src/tim.c ****   {
 397              		.loc 1 63 7 is_stmt 0 view .LVU123
 398 005e 3548     		ldr	r0, .L39
 399 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 400              	.LVL17:
  63:Core/Src/tim.c ****   {
 401              		.loc 1 63 6 view .LVU124
 402 0064 0028     		cmp	r0, #0
 403 0066 50D1     		bne	.L32
 404              	.L22:
  67:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 405              		.loc 1 67 3 is_stmt 1 view .LVU125
  67:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 406              		.loc 1 67 37 is_stmt 0 view .LVU126
 407 0068 0023     		movs	r3, #0
 408 006a 1393     		str	r3, [sp, #76]
  68:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 409              		.loc 1 68 3 is_stmt 1 view .LVU127
  68:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 410              		.loc 1 68 38 is_stmt 0 view .LVU128
 411 006c 1493     		str	r3, [sp, #80]
  69:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 412              		.loc 1 69 3 is_stmt 1 view .LVU129
  69:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 413              		.loc 1 69 33 is_stmt 0 view .LVU130
 414 006e 1593     		str	r3, [sp, #84]
  70:Core/Src/tim.c ****   {
 415              		.loc 1 70 3 is_stmt 1 view .LVU131
  70:Core/Src/tim.c ****   {
 416              		.loc 1 70 7 is_stmt 0 view .LVU132
 417 0070 13A9     		add	r1, sp, #76
 418 0072 3048     		ldr	r0, .L39
 419 0074 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 420              	.LVL18:
  70:Core/Src/tim.c ****   {
 421              		.loc 1 70 6 view .LVU133
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 15


 422 0078 0028     		cmp	r0, #0
 423 007a 49D1     		bne	.L33
 424              	.L23:
  74:Core/Src/tim.c ****   sConfigOC.Pulse = 1000;
 425              		.loc 1 74 3 is_stmt 1 view .LVU134
  74:Core/Src/tim.c ****   sConfigOC.Pulse = 1000;
 426              		.loc 1 74 20 is_stmt 0 view .LVU135
 427 007c 6023     		movs	r3, #96
 428 007e 0C93     		str	r3, [sp, #48]
  75:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 429              		.loc 1 75 3 is_stmt 1 view .LVU136
  75:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 430              		.loc 1 75 19 is_stmt 0 view .LVU137
 431 0080 4FF47A73 		mov	r3, #1000
 432 0084 0D93     		str	r3, [sp, #52]
  76:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 433              		.loc 1 76 3 is_stmt 1 view .LVU138
  76:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 434              		.loc 1 76 24 is_stmt 0 view .LVU139
 435 0086 0022     		movs	r2, #0
 436 0088 0E92     		str	r2, [sp, #56]
  77:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 437              		.loc 1 77 3 is_stmt 1 view .LVU140
  77:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 438              		.loc 1 77 25 is_stmt 0 view .LVU141
 439 008a 0F92     		str	r2, [sp, #60]
  78:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 440              		.loc 1 78 3 is_stmt 1 view .LVU142
  78:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 441              		.loc 1 78 24 is_stmt 0 view .LVU143
 442 008c 1092     		str	r2, [sp, #64]
  79:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 443              		.loc 1 79 3 is_stmt 1 view .LVU144
  79:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 444              		.loc 1 79 25 is_stmt 0 view .LVU145
 445 008e 1192     		str	r2, [sp, #68]
  80:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 446              		.loc 1 80 3 is_stmt 1 view .LVU146
  80:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 447              		.loc 1 80 26 is_stmt 0 view .LVU147
 448 0090 1292     		str	r2, [sp, #72]
  81:Core/Src/tim.c ****   {
 449              		.loc 1 81 3 is_stmt 1 view .LVU148
  81:Core/Src/tim.c ****   {
 450              		.loc 1 81 7 is_stmt 0 view .LVU149
 451 0092 0CA9     		add	r1, sp, #48
 452 0094 2748     		ldr	r0, .L39
 453 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 454              	.LVL19:
  81:Core/Src/tim.c ****   {
 455              		.loc 1 81 6 view .LVU150
 456 009a 0028     		cmp	r0, #0
 457 009c 3BD1     		bne	.L34
 458              	.L24:
  85:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 459              		.loc 1 85 3 is_stmt 1 view .LVU151
  85:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 16


 460              		.loc 1 85 19 is_stmt 0 view .LVU152
 461 009e 0023     		movs	r3, #0
 462 00a0 0D93     		str	r3, [sp, #52]
  86:Core/Src/tim.c ****   {
 463              		.loc 1 86 3 is_stmt 1 view .LVU153
  86:Core/Src/tim.c ****   {
 464              		.loc 1 86 7 is_stmt 0 view .LVU154
 465 00a2 0422     		movs	r2, #4
 466 00a4 0CA9     		add	r1, sp, #48
 467 00a6 2348     		ldr	r0, .L39
 468 00a8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 469              	.LVL20:
  86:Core/Src/tim.c ****   {
 470              		.loc 1 86 6 view .LVU155
 471 00ac 0028     		cmp	r0, #0
 472 00ae 35D1     		bne	.L35
 473              	.L25:
  90:Core/Src/tim.c ****   {
 474              		.loc 1 90 3 is_stmt 1 view .LVU156
  90:Core/Src/tim.c ****   {
 475              		.loc 1 90 7 is_stmt 0 view .LVU157
 476 00b0 0822     		movs	r2, #8
 477 00b2 0CA9     		add	r1, sp, #48
 478 00b4 1F48     		ldr	r0, .L39
 479 00b6 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 480              	.LVL21:
  90:Core/Src/tim.c ****   {
 481              		.loc 1 90 6 view .LVU158
 482 00ba 0028     		cmp	r0, #0
 483 00bc 31D1     		bne	.L36
 484              	.L26:
  94:Core/Src/tim.c ****   {
 485              		.loc 1 94 3 is_stmt 1 view .LVU159
  94:Core/Src/tim.c ****   {
 486              		.loc 1 94 7 is_stmt 0 view .LVU160
 487 00be 0C22     		movs	r2, #12
 488 00c0 0CA9     		add	r1, sp, #48
 489 00c2 1C48     		ldr	r0, .L39
 490 00c4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 491              	.LVL22:
  94:Core/Src/tim.c ****   {
 492              		.loc 1 94 6 view .LVU161
 493 00c8 70BB     		cbnz	r0, .L37
 494              	.L27:
  98:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 495              		.loc 1 98 3 is_stmt 1 view .LVU162
  98:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 496              		.loc 1 98 40 is_stmt 0 view .LVU163
 497 00ca 0023     		movs	r3, #0
 498 00cc 0193     		str	r3, [sp, #4]
  99:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 499              		.loc 1 99 3 is_stmt 1 view .LVU164
  99:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 500              		.loc 1 99 41 is_stmt 0 view .LVU165
 501 00ce 0293     		str	r3, [sp, #8]
 100:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 502              		.loc 1 100 3 is_stmt 1 view .LVU166
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 17


 100:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 503              		.loc 1 100 34 is_stmt 0 view .LVU167
 504 00d0 0393     		str	r3, [sp, #12]
 101:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 505              		.loc 1 101 3 is_stmt 1 view .LVU168
 101:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 506              		.loc 1 101 33 is_stmt 0 view .LVU169
 507 00d2 0493     		str	r3, [sp, #16]
 102:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 508              		.loc 1 102 3 is_stmt 1 view .LVU170
 102:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 509              		.loc 1 102 35 is_stmt 0 view .LVU171
 510 00d4 0593     		str	r3, [sp, #20]
 103:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 511              		.loc 1 103 3 is_stmt 1 view .LVU172
 103:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 512              		.loc 1 103 38 is_stmt 0 view .LVU173
 513 00d6 4FF40052 		mov	r2, #8192
 514 00da 0692     		str	r2, [sp, #24]
 104:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 515              		.loc 1 104 3 is_stmt 1 view .LVU174
 104:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 516              		.loc 1 104 36 is_stmt 0 view .LVU175
 517 00dc 0793     		str	r3, [sp, #28]
 105:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 518              		.loc 1 105 3 is_stmt 1 view .LVU176
 105:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 519              		.loc 1 105 36 is_stmt 0 view .LVU177
 520 00de 0893     		str	r3, [sp, #32]
 106:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 521              		.loc 1 106 3 is_stmt 1 view .LVU178
 106:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 522              		.loc 1 106 39 is_stmt 0 view .LVU179
 523 00e0 4FF00072 		mov	r2, #33554432
 524 00e4 0992     		str	r2, [sp, #36]
 107:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 525              		.loc 1 107 3 is_stmt 1 view .LVU180
 107:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 526              		.loc 1 107 37 is_stmt 0 view .LVU181
 527 00e6 0A93     		str	r3, [sp, #40]
 108:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 528              		.loc 1 108 3 is_stmt 1 view .LVU182
 108:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 529              		.loc 1 108 40 is_stmt 0 view .LVU183
 530 00e8 0B93     		str	r3, [sp, #44]
 109:Core/Src/tim.c ****   {
 531              		.loc 1 109 3 is_stmt 1 view .LVU184
 109:Core/Src/tim.c ****   {
 532              		.loc 1 109 7 is_stmt 0 view .LVU185
 533 00ea 01A9     		add	r1, sp, #4
 534 00ec 1148     		ldr	r0, .L39
 535 00ee FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 536              	.LVL23:
 109:Core/Src/tim.c ****   {
 537              		.loc 1 109 6 view .LVU186
 538 00f2 E0B9     		cbnz	r0, .L38
 539              	.L28:
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 18


 116:Core/Src/tim.c **** 
 540              		.loc 1 116 3 is_stmt 1 view .LVU187
 541 00f4 0F48     		ldr	r0, .L39
 542 00f6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 543              	.LVL24:
 118:Core/Src/tim.c **** /* TIM2 init function */
 544              		.loc 1 118 1 is_stmt 0 view .LVU188
 545 00fa 1AB0     		add	sp, sp, #104
 546              		.cfi_remember_state
 547              		.cfi_def_cfa_offset 8
 548              		@ sp needed
 549 00fc 10BD     		pop	{r4, pc}
 550              	.L30:
 551              		.cfi_restore_state
  56:Core/Src/tim.c ****   }
 552              		.loc 1 56 5 is_stmt 1 view .LVU189
 553 00fe FFF7FEFF 		bl	Error_Handler
 554              	.LVL25:
 555 0102 A3E7     		b	.L20
 556              	.L31:
  61:Core/Src/tim.c ****   }
 557              		.loc 1 61 5 view .LVU190
 558 0104 FFF7FEFF 		bl	Error_Handler
 559              	.LVL26:
 560 0108 A9E7     		b	.L21
 561              	.L32:
  65:Core/Src/tim.c ****   }
 562              		.loc 1 65 5 view .LVU191
 563 010a FFF7FEFF 		bl	Error_Handler
 564              	.LVL27:
 565 010e ABE7     		b	.L22
 566              	.L33:
  72:Core/Src/tim.c ****   }
 567              		.loc 1 72 5 view .LVU192
 568 0110 FFF7FEFF 		bl	Error_Handler
 569              	.LVL28:
 570 0114 B2E7     		b	.L23
 571              	.L34:
  83:Core/Src/tim.c ****   }
 572              		.loc 1 83 5 view .LVU193
 573 0116 FFF7FEFF 		bl	Error_Handler
 574              	.LVL29:
 575 011a C0E7     		b	.L24
 576              	.L35:
  88:Core/Src/tim.c ****   }
 577              		.loc 1 88 5 view .LVU194
 578 011c FFF7FEFF 		bl	Error_Handler
 579              	.LVL30:
 580 0120 C6E7     		b	.L25
 581              	.L36:
  92:Core/Src/tim.c ****   }
 582              		.loc 1 92 5 view .LVU195
 583 0122 FFF7FEFF 		bl	Error_Handler
 584              	.LVL31:
 585 0126 CAE7     		b	.L26
 586              	.L37:
  96:Core/Src/tim.c ****   }
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 19


 587              		.loc 1 96 5 view .LVU196
 588 0128 FFF7FEFF 		bl	Error_Handler
 589              	.LVL32:
 590 012c CDE7     		b	.L27
 591              	.L38:
 111:Core/Src/tim.c ****   }
 592              		.loc 1 111 5 view .LVU197
 593 012e FFF7FEFF 		bl	Error_Handler
 594              	.LVL33:
 595 0132 DFE7     		b	.L28
 596              	.L40:
 597              		.align	2
 598              	.L39:
 599 0134 00000000 		.word	htim1
 600 0138 002C0140 		.word	1073818624
 601              		.cfi_endproc
 602              	.LFE319:
 604              		.section	.text.MX_TIM2_Init,"ax",%progbits
 605              		.align	1
 606              		.global	MX_TIM2_Init
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 611              	MX_TIM2_Init:
 612              	.LFB320:
 121:Core/Src/tim.c **** 
 613              		.loc 1 121 1 view -0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 56
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617 0000 00B5     		push	{lr}
 618              		.cfi_def_cfa_offset 4
 619              		.cfi_offset 14, -4
 620 0002 8FB0     		sub	sp, sp, #60
 621              		.cfi_def_cfa_offset 64
 127:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 622              		.loc 1 127 3 view .LVU199
 127:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 623              		.loc 1 127 26 is_stmt 0 view .LVU200
 624 0004 0023     		movs	r3, #0
 625 0006 0A93     		str	r3, [sp, #40]
 626 0008 0B93     		str	r3, [sp, #44]
 627 000a 0C93     		str	r3, [sp, #48]
 628 000c 0D93     		str	r3, [sp, #52]
 128:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 629              		.loc 1 128 3 is_stmt 1 view .LVU201
 128:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 630              		.loc 1 128 27 is_stmt 0 view .LVU202
 631 000e 0793     		str	r3, [sp, #28]
 632 0010 0893     		str	r3, [sp, #32]
 633 0012 0993     		str	r3, [sp, #36]
 129:Core/Src/tim.c **** 
 634              		.loc 1 129 3 is_stmt 1 view .LVU203
 129:Core/Src/tim.c **** 
 635              		.loc 1 129 22 is_stmt 0 view .LVU204
 636 0014 0093     		str	r3, [sp]
 637 0016 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 20


 638 0018 0293     		str	r3, [sp, #8]
 639 001a 0393     		str	r3, [sp, #12]
 640 001c 0493     		str	r3, [sp, #16]
 641 001e 0593     		str	r3, [sp, #20]
 642 0020 0693     		str	r3, [sp, #24]
 134:Core/Src/tim.c ****   htim2.Init.Prescaler = 0;
 643              		.loc 1 134 3 is_stmt 1 view .LVU205
 134:Core/Src/tim.c ****   htim2.Init.Prescaler = 0;
 644              		.loc 1 134 18 is_stmt 0 view .LVU206
 645 0022 2148     		ldr	r0, .L53
 646 0024 4FF08042 		mov	r2, #1073741824
 647 0028 0260     		str	r2, [r0]
 135:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 648              		.loc 1 135 3 is_stmt 1 view .LVU207
 135:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 649              		.loc 1 135 24 is_stmt 0 view .LVU208
 650 002a 4360     		str	r3, [r0, #4]
 136:Core/Src/tim.c ****   htim2.Init.Period = 4294967295;
 651              		.loc 1 136 3 is_stmt 1 view .LVU209
 136:Core/Src/tim.c ****   htim2.Init.Period = 4294967295;
 652              		.loc 1 136 26 is_stmt 0 view .LVU210
 653 002c 8360     		str	r3, [r0, #8]
 137:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 654              		.loc 1 137 3 is_stmt 1 view .LVU211
 137:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 655              		.loc 1 137 21 is_stmt 0 view .LVU212
 656 002e 4FF0FF32 		mov	r2, #-1
 657 0032 C260     		str	r2, [r0, #12]
 138:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 658              		.loc 1 138 3 is_stmt 1 view .LVU213
 138:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 659              		.loc 1 138 28 is_stmt 0 view .LVU214
 660 0034 0361     		str	r3, [r0, #16]
 139:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 661              		.loc 1 139 3 is_stmt 1 view .LVU215
 139:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 662              		.loc 1 139 32 is_stmt 0 view .LVU216
 663 0036 8361     		str	r3, [r0, #24]
 140:Core/Src/tim.c ****   {
 664              		.loc 1 140 3 is_stmt 1 view .LVU217
 140:Core/Src/tim.c ****   {
 665              		.loc 1 140 7 is_stmt 0 view .LVU218
 666 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 667              	.LVL34:
 140:Core/Src/tim.c ****   {
 668              		.loc 1 140 6 view .LVU219
 669 003c 20BB     		cbnz	r0, .L48
 670              	.L42:
 144:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 671              		.loc 1 144 3 is_stmt 1 view .LVU220
 144:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 672              		.loc 1 144 34 is_stmt 0 view .LVU221
 673 003e 4FF48053 		mov	r3, #4096
 674 0042 0A93     		str	r3, [sp, #40]
 145:Core/Src/tim.c ****   {
 675              		.loc 1 145 3 is_stmt 1 view .LVU222
 145:Core/Src/tim.c ****   {
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 21


 676              		.loc 1 145 7 is_stmt 0 view .LVU223
 677 0044 0AA9     		add	r1, sp, #40
 678 0046 1848     		ldr	r0, .L53
 679 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 680              	.LVL35:
 145:Core/Src/tim.c ****   {
 681              		.loc 1 145 6 view .LVU224
 682 004c F8B9     		cbnz	r0, .L49
 683              	.L43:
 149:Core/Src/tim.c ****   {
 684              		.loc 1 149 3 is_stmt 1 view .LVU225
 149:Core/Src/tim.c ****   {
 685              		.loc 1 149 7 is_stmt 0 view .LVU226
 686 004e 1648     		ldr	r0, .L53
 687 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 688              	.LVL36:
 149:Core/Src/tim.c ****   {
 689              		.loc 1 149 6 view .LVU227
 690 0054 F0B9     		cbnz	r0, .L50
 691              	.L44:
 153:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 692              		.loc 1 153 3 is_stmt 1 view .LVU228
 153:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 693              		.loc 1 153 37 is_stmt 0 view .LVU229
 694 0056 0023     		movs	r3, #0
 695 0058 0793     		str	r3, [sp, #28]
 154:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 696              		.loc 1 154 3 is_stmt 1 view .LVU230
 154:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 697              		.loc 1 154 33 is_stmt 0 view .LVU231
 698 005a 0993     		str	r3, [sp, #36]
 155:Core/Src/tim.c ****   {
 699              		.loc 1 155 3 is_stmt 1 view .LVU232
 155:Core/Src/tim.c ****   {
 700              		.loc 1 155 7 is_stmt 0 view .LVU233
 701 005c 07A9     		add	r1, sp, #28
 702 005e 1248     		ldr	r0, .L53
 703 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 704              	.LVL37:
 155:Core/Src/tim.c ****   {
 705              		.loc 1 155 6 view .LVU234
 706 0064 C8B9     		cbnz	r0, .L51
 707              	.L45:
 159:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 708              		.loc 1 159 3 is_stmt 1 view .LVU235
 159:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 709              		.loc 1 159 20 is_stmt 0 view .LVU236
 710 0066 6023     		movs	r3, #96
 711 0068 0093     		str	r3, [sp]
 160:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 712              		.loc 1 160 3 is_stmt 1 view .LVU237
 160:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 713              		.loc 1 160 19 is_stmt 0 view .LVU238
 714 006a 0022     		movs	r2, #0
 715 006c 0192     		str	r2, [sp, #4]
 161:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 716              		.loc 1 161 3 is_stmt 1 view .LVU239
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 22


 161:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 717              		.loc 1 161 24 is_stmt 0 view .LVU240
 718 006e 0292     		str	r2, [sp, #8]
 162:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 719              		.loc 1 162 3 is_stmt 1 view .LVU241
 162:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 720              		.loc 1 162 24 is_stmt 0 view .LVU242
 721 0070 0492     		str	r2, [sp, #16]
 163:Core/Src/tim.c ****   {
 722              		.loc 1 163 3 is_stmt 1 view .LVU243
 163:Core/Src/tim.c ****   {
 723              		.loc 1 163 7 is_stmt 0 view .LVU244
 724 0072 6946     		mov	r1, sp
 725 0074 0C48     		ldr	r0, .L53
 726 0076 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 727              	.LVL38:
 163:Core/Src/tim.c ****   {
 728              		.loc 1 163 6 view .LVU245
 729 007a 88B9     		cbnz	r0, .L52
 730              	.L46:
 170:Core/Src/tim.c **** 
 731              		.loc 1 170 3 is_stmt 1 view .LVU246
 732 007c 0A48     		ldr	r0, .L53
 733 007e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 734              	.LVL39:
 172:Core/Src/tim.c **** 
 735              		.loc 1 172 1 is_stmt 0 view .LVU247
 736 0082 0FB0     		add	sp, sp, #60
 737              		.cfi_remember_state
 738              		.cfi_def_cfa_offset 4
 739              		@ sp needed
 740 0084 5DF804FB 		ldr	pc, [sp], #4
 741              	.L48:
 742              		.cfi_restore_state
 142:Core/Src/tim.c ****   }
 743              		.loc 1 142 5 is_stmt 1 view .LVU248
 744 0088 FFF7FEFF 		bl	Error_Handler
 745              	.LVL40:
 746 008c D7E7     		b	.L42
 747              	.L49:
 147:Core/Src/tim.c ****   }
 748              		.loc 1 147 5 view .LVU249
 749 008e FFF7FEFF 		bl	Error_Handler
 750              	.LVL41:
 751 0092 DCE7     		b	.L43
 752              	.L50:
 151:Core/Src/tim.c ****   }
 753              		.loc 1 151 5 view .LVU250
 754 0094 FFF7FEFF 		bl	Error_Handler
 755              	.LVL42:
 756 0098 DDE7     		b	.L44
 757              	.L51:
 157:Core/Src/tim.c ****   }
 758              		.loc 1 157 5 view .LVU251
 759 009a FFF7FEFF 		bl	Error_Handler
 760              	.LVL43:
 761 009e E2E7     		b	.L45
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 23


 762              	.L52:
 165:Core/Src/tim.c ****   }
 763              		.loc 1 165 5 view .LVU252
 764 00a0 FFF7FEFF 		bl	Error_Handler
 765              	.LVL44:
 766 00a4 EAE7     		b	.L46
 767              	.L54:
 768 00a6 00BF     		.align	2
 769              	.L53:
 770 00a8 00000000 		.word	htim2
 771              		.cfi_endproc
 772              	.LFE320:
 774              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 775              		.align	1
 776              		.global	HAL_TIM_Base_MspDeInit
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 781              	HAL_TIM_Base_MspDeInit:
 782              	.LVL45:
 783              	.LFB323:
 269:Core/Src/tim.c **** 
 270:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 271:Core/Src/tim.c **** {
 784              		.loc 1 271 1 view -0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788              		.loc 1 271 1 is_stmt 0 view .LVU254
 789 0000 08B5     		push	{r3, lr}
 790              		.cfi_def_cfa_offset 8
 791              		.cfi_offset 3, -8
 792              		.cfi_offset 14, -4
 272:Core/Src/tim.c **** 
 273:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 793              		.loc 1 273 3 is_stmt 1 view .LVU255
 794              		.loc 1 273 20 is_stmt 0 view .LVU256
 795 0002 0368     		ldr	r3, [r0]
 796              		.loc 1 273 5 view .LVU257
 797 0004 0B4A     		ldr	r2, .L61
 798 0006 9342     		cmp	r3, r2
 799 0008 03D0     		beq	.L59
 274:Core/Src/tim.c ****   {
 275:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 276:Core/Src/tim.c **** 
 277:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 278:Core/Src/tim.c ****     /* Peripheral clock disable */
 279:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 280:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 281:Core/Src/tim.c **** 
 282:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 283:Core/Src/tim.c ****   }
 284:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM2)
 800              		.loc 1 284 8 is_stmt 1 view .LVU258
 801              		.loc 1 284 10 is_stmt 0 view .LVU259
 802 000a B3F1804F 		cmp	r3, #1073741824
 803 000e 07D0     		beq	.L60
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 24


 804              	.LVL46:
 805              	.L55:
 285:Core/Src/tim.c ****   {
 286:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 287:Core/Src/tim.c **** 
 288:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 0 */
 289:Core/Src/tim.c ****     /* Peripheral clock disable */
 290:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_DISABLE();
 291:Core/Src/tim.c **** 
 292:Core/Src/tim.c ****     /* TIM2 DMA DeInit */
 293:Core/Src/tim.c ****     HAL_DMA_DeInit(tim_baseHandle->hdma[TIM_DMA_ID_CC1]);
 294:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 295:Core/Src/tim.c **** 
 296:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 1 */
 297:Core/Src/tim.c ****   }
 298:Core/Src/tim.c **** }
 806              		.loc 1 298 1 view .LVU260
 807 0010 08BD     		pop	{r3, pc}
 808              	.LVL47:
 809              	.L59:
 279:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 810              		.loc 1 279 5 is_stmt 1 view .LVU261
 811 0012 02F56442 		add	r2, r2, #58368
 812 0016 136E     		ldr	r3, [r2, #96]
 813 0018 23F40063 		bic	r3, r3, #2048
 814 001c 1366     		str	r3, [r2, #96]
 815 001e F7E7     		b	.L55
 816              	.L60:
 290:Core/Src/tim.c **** 
 817              		.loc 1 290 5 view .LVU262
 818 0020 054A     		ldr	r2, .L61+4
 819 0022 936D     		ldr	r3, [r2, #88]
 820 0024 23F00103 		bic	r3, r3, #1
 821 0028 9365     		str	r3, [r2, #88]
 293:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 822              		.loc 1 293 5 view .LVU263
 823 002a 406A     		ldr	r0, [r0, #36]
 824              	.LVL48:
 293:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 825              		.loc 1 293 5 is_stmt 0 view .LVU264
 826 002c FFF7FEFF 		bl	HAL_DMA_DeInit
 827              	.LVL49:
 828              		.loc 1 298 1 view .LVU265
 829 0030 EEE7     		b	.L55
 830              	.L62:
 831 0032 00BF     		.align	2
 832              	.L61:
 833 0034 002C0140 		.word	1073818624
 834 0038 00100240 		.word	1073876992
 835              		.cfi_endproc
 836              	.LFE323:
 838              		.global	hdma_tim2_ch1
 839              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 840              		.align	2
 843              	hdma_tim2_ch1:
 844 0000 00000000 		.space	72
 844      00000000 
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 25


 844      00000000 
 844      00000000 
 844      00000000 
 845              		.global	htim2
 846              		.section	.bss.htim2,"aw",%nobits
 847              		.align	2
 850              	htim2:
 851 0000 00000000 		.space	76
 851      00000000 
 851      00000000 
 851      00000000 
 851      00000000 
 852              		.global	htim1
 853              		.section	.bss.htim1,"aw",%nobits
 854              		.align	2
 857              	htim1:
 858 0000 00000000 		.space	76
 858      00000000 
 858      00000000 
 858      00000000 
 858      00000000 
 859              		.text
 860              	.Letext0:
 861              		.file 2 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 862              		.file 3 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 863              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l412xx.h"
 864              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 865              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 866              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 867              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 868              		.file 9 "Core/Inc/tim.h"
 869              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 870              		.file 11 "Core/Inc/main.h"
 871              		.file 12 "<built-in>"
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccrNmExb.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:21     .text.HAL_TIM_Base_MspInit:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:27     .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:159    .text.HAL_TIM_Base_MspInit:0000000000000080 $d
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:843    .bss.hdma_tim2_ch1:0000000000000000 hdma_tim2_ch1
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:167    .text.HAL_TIM_MspPostInit:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:173    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:297    .text.HAL_TIM_MspPostInit:0000000000000080 $d
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:303    .text.MX_TIM1_Init:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:309    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:599    .text.MX_TIM1_Init:0000000000000134 $d
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:857    .bss.htim1:0000000000000000 htim1
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:605    .text.MX_TIM2_Init:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:611    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:770    .text.MX_TIM2_Init:00000000000000a8 $d
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:850    .bss.htim2:0000000000000000 htim2
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:775    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:781    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:833    .text.HAL_TIM_Base_MspDeInit:0000000000000034 $d
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:840    .bss.hdma_tim2_ch1:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:847    .bss.htim2:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccrNmExb.s:854    .bss.htim1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_DMA_Init
Error_Handler
HAL_GPIO_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_DMA_DeInit
